# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  PROJECT_NAME: cicd-test-server
  BUCKET_NAME: ci-cdtest
  CODE_DEPLOY_APP_NAME: codedeploy
  DEPLOYMENT_GROUP_NAME: codedeploy-group

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # 워크 플로우 실행 전 기본적으로 체크아웃
    - uses: actions/checkout@v3
    # jdk 17 버전 설치, 다른 jdk 일 경우 수정
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    # gradle 사용 , arguments 를 붙이면 뒤에 그대로 실행됨
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build

    - name: Make Zip File
      run: zip -qq -r ./$GITHUB_SHA.zip .
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME -deployment-config-name CodeDeployDefault.OneAtTime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
#
#    # 현재시간 가져오기
#    - name: Get current time
#      uses: josStorer/get-current-time@v2.0.2
#      id: current-time
#      with:
#        format: YYYY-MM-DDTHH-mm-ss
#        utcOffset: "+09:00"
#
#    # 배포용 패키지 경로 저장
#    - name: Set artifact
#      run: echo "artifact=$(ls ./build/libs) >> $GITHUB_ENV
